{"version":3,"sources":["Component/Header.jsx","Container/socket.jsx","Component/StockImage.jsx","Component/StockName.jsx","Container/StockItem.jsx","Container/StockList.jsx","App.js","ignoredFolder/test.jsx","index.js"],"names":["Header","className","ws","W3CWebSocket","Logo","message","logo","length","website","joined","split","href","Card","Img","bsPrefix","variant","src","alt","error","StockName","Fragment","Subtitle","fullName","symbol","Test","props","handleCompanyProfile","fetch","then","response","json","data","setState","companyProfile","subName","name","weburl","state","this","sign","value","openPrice","toFixed","math","Math","abs","text","Text","stockName","price","key","Body","Title","handleColor","Button","onClick","onDelete","Component","stockList","connect","convertTime","Date","toLocaleString","timeZone","nycTime","getHours","nycMin","getMinutes","handleOpenMarket","closeOrOpen","console","log","handleCloseMarket","onopen","map","item","send","JSON","stringify","type","prices","onmessage","parse","prevState","s","p","ok","Error","handleErrorStock","c","o","handleClose","close","handleDelete","filter","element","handleAdd","handleDuplicatedStock","inputField","document","getElementsByClassName","placeholder","handleChange","event","target","handleSubmit","preventDefault","includes","id","prePrice","onSubmit","onChange","Container","index","openOrnot","App","ReactDom","render","getElementById"],"mappings":"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","file":"static/js/main.7d5a7749.chunk.js","sourcesContent":["import React from \"react\";\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Stock-Tracker</h1>\r\n    </div>\r\n  );\r\n};\r\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nconst ws = new W3CWebSocket(\"wss://ws.finnhub.io?token=bs17pofrh5r8enj77ptg\");\r\n\r\nexport default ws;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Logo = (message) => {\r\n  try {\r\n    //check if logo not exist and website exist\r\n    if (message.logo.length === 0 && message.website.length !== 0) {\r\n\r\n      var joined =\r\n        \"https://logo.clearbit.com/\" + message.website.split(\"www.\")[1];\r\n      return (\r\n        <a href={message.website}><Card.Img\r\n          bsPrefix=\"card-img\"\r\n          variant=\"top\"\r\n          src={joined}\r\n          className=\"mx-auto\"\r\n        /></a>\r\n      );\r\n      // check if both exist\r\n    } else if (message.logo.length !== 0 && message.website.length !== 0) {\r\n      return (\r\n        <a href={message.website}><Card.Img\r\n          bsPrefix=\"card-img\"\r\n          variant=\"top\"\r\n          src={message.logo}\r\n          className=\"mx-auto\"\r\n        /></a>\r\n      );\r\n    }\r\n    else {\r\n      return <Card.Img\r\n        alt=\"cannot find image\"\r\n      />;\r\n    }\r\n  }\r\n  catch (error) {\r\n    return (\r\n      <Card.Img\r\n        alt=\"STOCK is not Avaliable\"\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst StockName = (message) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card.Subtitle>\r\n        {message.fullName} <p className=\"text-muted\">({message.symbol})</p>\r\n      </Card.Subtitle>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StockName;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Logo from \"../Component/StockImage\";\r\nimport Name from \"../Component/StockName\";\r\nimport Button from \"react-bootstrap/Button\";\r\nclass Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      companyProfile: {\r\n        logo: \"\",\r\n        subName: \"\",\r\n        website: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.handleCompanyProfile(this.props.name);\r\n  }\r\n\r\n  //get information about the company \r\n  handleCompanyProfile = (message) => {\r\n    fetch(\r\n      \"https://finnhub.io/api/v1/stock/profile2?symbol=\" +\r\n      message +\r\n      \"&token=bs17pofrh5r8enj77ptg\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log(message.split(\":\"));\r\n        this.setState({\r\n          companyProfile: {\r\n            logo: data.logo,\r\n            subName: data.name,\r\n            website: data.weburl,\r\n          }\r\n        });\r\n      })\r\n  };\r\n\r\n  //handle the color of current price - open price = round to two decimal  \r\n  handleColor() {\r\n    var sign =\r\n      (this.props.value - this.props.openPrice).toFixed(2) <= 0 ? \"- \" : \"+ \";\r\n    var math =\r\n      sign + Math.abs(this.props.value - this.props.openPrice).toFixed(2);\r\n    var text = \"\";\r\n    if (sign === \"- \") {\r\n      text = \"text-danger\";\r\n    } else {\r\n      text = \"text-success\";\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Card.Text className={text}>{math}</Card.Text>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  render() {\r\n    var stockName = this.props.name;\r\n    let price = this.props.value;\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <div className=\"column\">\r\n          <Card>\r\n            <div className=\"imgCard\">\r\n              <Logo\r\n                key={stockName}\r\n                website={this.state.companyProfile.website}\r\n                logo={this.state.companyProfile.logo}\r\n              />\r\n            </div>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <Name\r\n                  symbol={stockName}\r\n                  fullName={this.state.companyProfile.subName}\r\n                />\r\n              </Card.Title>\r\n              <Card.Text>\r\n                <strong>${price}</strong>\r\n              </Card.Text>\r\n              {this.handleColor()}\r\n\r\n            </Card.Body>\r\n\r\n            <Button\r\n              className=\"btn-danger\"\r\n              onClick={() => this.props.onDelete(this.props.name)}\r\n            >\r\n              Unsubscribe\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ws from \"./socket\";\r\nimport Test from \"./StockItem\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nclass stockList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // data: [\"BINANCE:BTCUSDT\", \"BINANCE:ETHUSDT\", \"BINANCE:LTCBTC\"],\r\n      data: [\"AMD\", \"AAPL\", \"DAL\"],\r\n      id: \"0\",\r\n      prices: {},\r\n      prePrice: \"\",\r\n      value: \"\",\r\n      closeOrOpen: \"\",\r\n      openPrice: \"\",\r\n    };\r\n  }\r\n\r\n\r\n  // Dealing with socket \r\n  componentDidMount() {\r\n    this.connect();\r\n    // this.ws(this.state.data);\r\n  }\r\n\r\n  //Connect: when the socket is open subscribe to all this symbol in data\r\n  //and listen for prices changes\r\n  connect = () => {\r\n    const convertTime = new Date().toLocaleString(\"en-US\", {\r\n      timeZone: \"America/New_York\",\r\n    });\r\n    const nycTime = new Date(convertTime).getHours();\r\n    const nycMin = new Date(convertTime).getMinutes();\r\n    if (nycTime >= 9 && nycMin > 30 && nycTime < 16) {\r\n      this.handleOpenMarket();\r\n      this.setState({ closeOrOpen: true })\r\n    } else {\r\n      console.log(\"something\")\r\n      this.handleCloseMarket();\r\n      this.setState({ closeOrOpen: false })\r\n    }\r\n  };\r\n\r\n  handleOpenMarket = () => {\r\n    ws.onopen = () => {\r\n      this.state.data.map((item) => {\r\n        ws.send(JSON.stringify({ type: \"subscribe\", symbol: item }));\r\n        this.setState({ prices: { [item]: \"\" } });\r\n      });\r\n    };\r\n    ws.onmessage = (message) => {\r\n      if (message.data[2] !== \"t\") {\r\n        var data = JSON.parse(message.data).data;\r\n        this.setState((prevState) => ({\r\n          prices: { ...prevState.prices, [data[0].s]: data[0].p },\r\n        }));\r\n      }\r\n    };\r\n  }\r\n\r\n  handleCloseMarket = () => {\r\n    // console.log(this.state.data)\r\n    this.state.data.map((item) => {\r\n      fetch(\r\n        \"https://finnhub.io/api/v1/quote?symbol=\" +\r\n        item +\r\n        \"&token=bs17pofrh5r8enj77ptg\"\r\n      )\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          return response.json();\r\n        }).then((data) => {\r\n          if (typeof data.error !== \"undefined\") {\r\n            this.handleErrorStock();\r\n          }\r\n          else {\r\n            this.setState((prevState) => ({\r\n              prices: { ...prevState.prices, [item]: data.c, [item + \"open\"]: data.o },\r\n            }))\r\n          }\r\n\r\n\r\n        })\r\n\r\n      // .then((data) => this.setState({ value: data.c, prePrice: data.pc }));\r\n\r\n    })\r\n  };\r\n  //close connection\r\n  handleClose = () => {\r\n    ws.close();\r\n  };\r\n\r\n  //unsub item\r\n  handleDelete = (message) => {\r\n    // console.log(message);\r\n    ws.send(JSON.stringify({ type: \"unsubscribe\", symbol: message }));\r\n    this.setState((prevState) => ({\r\n      data: [...prevState.data.filter((element) => element !== message)],\r\n    }));\r\n  };\r\n\r\n  //add item\r\n  handleAdd = (message) => {\r\n    if (this.state.closeOrOpen) {\r\n      this.setState({ value: \"\" })\r\n      this.setState(\r\n        (prevState) => ({\r\n          data: [...prevState.data, message],\r\n        }),\r\n        (ws.onopen = () => {\r\n          this.state.data.map((item) => {\r\n            ws.send(JSON.stringify({ type: \"subscribe\", symbol: item }));\r\n            this.setState({ prices: { [item]: \"\" } });\r\n          });\r\n        })\r\n      );\r\n    }\r\n    else {\r\n      this.setState({\r\n        data: [...this.state.data, message],\r\n      }, () => { this.handleCloseMarket() })\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  // For searching \r\n\r\n\r\n  //handle duplicating stock\r\n  handleDuplicatedStock = () => {\r\n    var inputField = document.getElementsByClassName(\"add\")[0];\r\n    this.setState({ value: \"\" });\r\n    inputField.placeholder = \"You have already enter this task\"\r\n  }\r\n  // handle unavailable stock\r\n  handleErrorStock = () => {\r\n    var inputField = document.getElementsByClassName(\"add\")[0];\r\n    this.setState({ value: \"\" });\r\n    inputField.placeholder = \"Stock is not Avaliable\"\r\n  }\r\n\r\n  // handle changes in the input form\r\n  handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n\r\n  }\r\n  // handle when submit check whether the stock is already made\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.state.data.includes(this.state.value) !== true\r\n      ? this.handleAdd(this.state.value)\r\n      : this.handleDuplicatedStock()\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            placeholder=\"Add Stock\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            className=\"add\"\r\n          />\r\n\r\n          <div className=\"buttons\">\r\n            <Button type=\"submit\" className=\"b btn btn-success\">\r\n              <i className=\"fa fa-plus\"></i>\r\n            </Button>\r\n          </div>\r\n          {/* <Button onClick={this.handleClose}>Close Socket</Button> */}\r\n        </form>\r\n\r\n        <Container className=\"newCss py-5 bg-faded\">\r\n          <div className=\"row\">\r\n            {this.state.data.map((item, index) => (\r\n              <Test\r\n                key={index}\r\n                name={item}\r\n                onDelete={this.handleDelete}\r\n                value={this.state.prices[item]}\r\n                openPrice={this.state.prices[item + \"open\"]}\r\n                openOrnot={this.state.closeOrOpen}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default stockList;\r\n","import React, { Component } from \"react\";\nimport { Header } from \"./Component/Header\";\nimport StockBody from \"./Container/StockList\";\nimport Test from \"./ignoredFolder/test\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        {/* <Test /> */}\n        <StockBody />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nclass Test extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/users\")\r\n            .then((response) => response.json())\r\n            .then((fromApi) => {\r\n                console.log(fromApi);\r\n\r\n            });\r\n    }\r\n    render() {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\nexport default Test;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}